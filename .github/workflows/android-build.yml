name: Android Debug Build

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # To preserve file permissions (e.g. gradlew +x)

      - name: Setup Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Vérification de la structure du projet
        run: |
          echo "Vérification de la structure du projet..."
          if [ ! -d "android" ]; then
            echo "Le répertoire 'android' est manquant."
            exit 1
          fi
          if [ ! -f "package.json" ]; then
            echo "Le fichier 'package.json' est manquant."
            exit 1
          fi
          if [ ! -f "android/build.gradle" ]; then
            echo "Le fichier 'android/build.gradle' est manquant."
            exit 1
          fi
          echo "Structure du projet validée."

      - name: Vérifier et installer jq
        run: |
          if ! command -v jq &> /dev/null; then
            sudo apt-get update && sudo apt-get install -y jq
          fi

      - name: Install Android SDK (cmdline-tools)
        run: |
          mkdir -p android-sdk/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdk.zip
          unzip sdk.zip -d tmp-sdk
          mv tmp-sdk/cmdline-tools android-sdk/cmdline-tools/latest
          rm -rf tmp-sdk sdk.zip
          echo "ANDROID_HOME=$PWD/android-sdk" >> $GITHUB_ENV
          echo "$PWD/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$PWD/android-sdk/platform-tools" >> $GITHUB_PATH
          echo "ANDROID_SDK_ROOT=$PWD/android-sdk" >> $GITHUB_ENV

      - name: Accepter les licences SDK et installer les composants nécessaires
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"
          sdkmanager --update

      - name: Lire version de Node.js depuis package.json
        id: detect-node
        run: |
          if [ -f "package.json" ]; then
            version=$(jq -r '.engines.node' package.json)
            if [ "$version" == "null" ] || [ -z "$version" ]; then
              echo "version=18" >> $GITHUB_OUTPUT
            else
              echo "version=$version" >> $GITHUB_OUTPUT
            fi
          else
            echo "version=18" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.detect-node.outputs.version }}

      - name: Install npm dependencies
        run: npm install --legacy-peer-deps

      - name: Clean npm and reinstall (optional recovery)
        run: |
          rm -rf node_modules package-lock.json
          npm install --legacy-peer-deps

      - name: Set up JDK 17
        id: setup-java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Vérifier version de Java et Gradle
        run: |
          echo "JAVA_HOME=$JAVA_HOME"
          java -version
          ./gradlew -version
        working-directory: android

      - name: Ajouter compileSdkVersion si manquant
        run: |
          if ! grep -q "compileSdkVersion" android/build.gradle; then
            sed -i '/ext {/a\        compileSdkVersion = 33' android/build.gradle
          fi

      - name: Générer un keystore de débogage
        run: |
          if [ ! -f android/app/debug.keystore ]; then
            keytool -genkeypair \
              -v \
              -keystore android/app/debug.keystore \
              -alias androiddebugkey \
              -storepass android \
              -keypass android \
              -keyalg RSA \
              -keysize 2048 \
              -validity 10000 \
              -dname "CN=Android Debug,O=Android,C=US" \
              -deststoretype pkcs12
          fi
          keytool -list -v \
            -keystore android/app/debug.keystore \
            -alias androiddebugkey \
            -storepass android

      - name: Build Debug APK
        run: |
          echo "JAVA_HOME=$JAVA_HOME"
          $JAVA_HOME/bin/java -version
          ./gradlew assembleDebug -Dorg.gradle.jvmargs="-Xmx4096m -XX:MaxMetaspaceSize=1024m" --no-daemon
        working-directory: android
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: android/app/build/outputs/apk/debug/*.apk
          retention-days: 7
